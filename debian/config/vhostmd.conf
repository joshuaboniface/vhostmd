<?xml version="1.0" ?>
<!DOCTYPE vhostmd SYSTEM "vhostmd.dtd">

<!--

Configuration file for virtual host metrics daemon (vhostmd) on PVC.

Supported metric types are: int32, uint32, int64, uint64, real32,
real64, and string.

A metric's value is set to the output produced by executing its action.

'action' can include the special token NAME, in which case the name of
the vm currently under inspection is substituted for NAME.  Only useful
within the vm element.

-->


<!--     1         2         3         4         5         6         -->
<!-- 678901234567890123456789012345678901234567890123456789012345678 -->


<!--
We sometimes use the following awk form to filter the output of the
virsh command (mostly `virsh -r CONNECT dominfo NAME' - use
`virsh -r dominfo <dom id>' to test on the commandline) into a standard
format like

  ID:6
  NAME:ls3055v0
  UUID:955c3b65-d013-547f-321b-9fea65439c40
  OS_TYPE:hvm
  STATE:running
  CPU(S):4
  CPU_TIME:433016.4:S
  MAX_MEMORY:20000000:KB
  USED_MEMORY:16384000:KB
  AUTOSTART:disable

We do this to extract numbers out of physical quantities in a reliable
way.
-->
<!--
          |awk -F ':' '
          function mkvarnam(s)  { # UPPER_CASE_UNDERSCORE
            sub("(^[[:space:]]+|[[:space:]]+$)", "", s);  # trim
            gsub("[[:space:]]+", "_", s); s = toupper(s);
            return s;
          }
          function filt_phys(s, sep,    num, unit) {  # 42.0 KM
            sub("(^[[:space:]]+|[[:space:]]+$)", "", s);  # trim
            if ( s ~ /^[0-9]*\.?[0-9]+[[:space:]]*[[:alpha:]]+$/ )
            {
              num = s; unit = s;
              sub("[[:space:]]*[[:alpha:]]+$", "", num);
              sub("^[0-9]*[.]?[0-9]+[[:space:]]*", "", unit);
              return num sep toupper(unit);
            }
            else
            {
              return s;
            }
          }
          /:/ {
            d1    = substr($0, 1, index($0, ":") - 1);
            rest  = substr($0, index($0, ":") + 1);
            printf("%s:%s\n", mkvarnam(d1), filt_phys(rest, ":"));
          }'                                  \
-->

<vhostmd>
  <globals>
    <disk>
      <name>host-metrics-disk</name>
      <path>/dev/shm/vhostmd0</path>
      <!-- must be between [128 KB, 256 MB] in size -->
      <size unit="k">256</size>
    </disk>
    <update_period>60</update_period>
    <path>/bin:/sbin:/usr/bin:/usr/sbin:/usr/share/vhostmd/scripts</path>
    <transport>vbd</transport>
    <!-- <transport>xenstore</transport> -->
  </globals>
  <metrics>
    <metric type="string" context="host">
      <name>HostName</name>
      <action>hostname</action>
    </metric>
    <metric type="uint64" context="host">
      <name>Time</name>
      <action>date +%s</action>
    </metric>
    <metric type="string" context="host">
      <name>Timezone</name>
      <action>cat /etc/timezone</action>
    </metric>
    <metric type="string" context="host">
      <name>Machine-ID</name>
      <action>cat /etc/machine-id</action>
    </metric>
    <metric type="string" context="host">
      <name>PVC-Cluster</name>
      <action>grep -A1 '^cluster:' /etc/pvc/pvc.conf | awk '$1 ~ /name/ { print $2 }'</action>
    </metric>
    <metric type="string" context="host">
      <name>VirtProductInfo</name>
      <action>
        virsh -r CONNECT version        \
          |awk -F ':' '
          function mkvarnam(s)  { # UPPER_CASE_UNDERSCORE
            sub("(^[[:space:]]+|[[:space:]]+$)", "", s);  # trim
            gsub("[[:space:]]+", "_", s); s = toupper(s);
            return s;
          }
          function filt_phys(s, sep,    num, unit) {  # 42.0 KM
            sub("(^[[:space:]]+|[[:space:]]+$)", "", s);  # trim
            if ( s ~ /^[0-9]*\.?[0-9]+[[:space:]]*[[:alpha:]]+$/ )
            {
              num = s; unit = s;
              sub("[[:space:]]*[[:alpha:]]+$", "", num);
              sub("^[0-9]*[.]?[0-9]+[[:space:]]*", "", unit);
              return num sep toupper(unit);
            }
            else
            {
              return s;
            }
          }
          /:/ {
            d1    = substr($0, 1, index($0, ":") - 1);
            rest  = substr($0, index($0, ":") + 1);
            printf("%s:%s\n", mkvarnam(d1), filt_phys(rest, ":"));
          }'                                  \
          | awk -F: '$1 == "RUNNING_HYPERVISOR" { print $2; }'
      </action>
    </metric>
  </metrics>
</vhostmd>
<!--
  vi:ts=2:sw=2:expandtab:ignorecase:nu:ruler
-->
<!-- EOF -->
